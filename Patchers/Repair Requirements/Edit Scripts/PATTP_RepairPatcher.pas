{
  Power Armor Repair Requirements Patcher for Fallout 4
  by Skiesbleed
  
  This patcher is designed to go change the repair requirements to require perks depending on the type of power armor. It is designed for use when many power armor sets are installed to help differentiate them, and was made with the mod Power Armor to the People in mind.
  
  Requires: FO4Edit, MXPF
  Optional: Power Armor to the People and the many power armor sets it supports
  }

unit UserScript;
// Import MXPF functions
uses 'lib\mxpf';

function Initialize: Integer;
var
  i, j: integer;
  powerArmorRecords: TList;
  createdObject: string;
  rec, armoRec: IInterface;
  matchFound: boolean;
begin
  // set MXPF options and initialize it
  DefaultOptionsMXPF;
  InitializeMXPF;
  
  // select/create a new patch file that will be identified by its author field
  PatchFileByAuthor('Autogenerated PATTP Repair Patch');
  SetExclusions(mxHardcodedDatFiles);
  LoadRecords('ARMO'); // loads all constructible object records

  powerArmorRecords := TList.Create;

  // Find all of the power armor first
  for i := MaxRecordIndex downto 0 do begin
    rec := GetRecord(i);
    if HasKeyword(rec, 'ArmorTypePower') then
      powerArmorRecords.Add(TObject(rec))
  end;

  mxRecords.Clear;

  LoadRecords('COBJ');

  // Now, look at every constructible object and only keep the ones that repair power armor
  // it's important that the loop starts at MaxRecordIndex and goes down to 0
  // because we're removing records
  for i := MaxRecordIndex downto 0 do begin
    rec := GetRecord(i);
    matchFound := false;
    for j:= (powerArmorRecords.Count - 1) downto 0 do begin
      armoRec := ObjectToElement(powerArmorRecords[j]);
      if GetElementEditValues(rec, 'CNAM') = Name(armoRec) then begin
        matchFound := true;
        break;
      end;
    end;

    if not matchFound then RemoveRecord(i);
  end;
  
  // then copy records to the patch file
  CopyRecordsToPatch;
  
  // and set values on them
  for i := 0 to MaxPatchRecordIndex do begin
    rec := GetPatchRecord(i);
    createdObject := GetElementEditValues(rec, 'CNAM');
    AddMessage(Format('Copied %s, which creates %s', [Name(rec), createdObject]));
  end;
  
  // call PrintMXPFReport for a report on successes and failures
  PrintMXPFReport;
  
  // always call FinalizeMXPF when done
  FinalizeMXPF;
end;

end.